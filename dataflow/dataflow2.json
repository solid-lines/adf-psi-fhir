{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adls_raw",
						"type": "LinkedServiceReference"
					},
					"name": "srcPatient"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "flatten1"
				},
				{
					"name": "pivot1"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "flatten2"
				}
			],
			"scriptLines": [
				"parameters{",
				"     date as integer",
				"}",
				"source(output(",
				"          active as boolean,",
				"          address as (city as string, country as string, line as string[], postalCode as integer, state as string)[],",
				"          birthDate as date,",
				"          communication as (language as (coding as (code as string, display as string, system as string)[], text as string), preferred as boolean)[],",
				"          extension as (url as string, valueCodeableConcept as (coding as (code as string, display as string, system as string)[]))[],",
				"          gender as string,",
				"          id as short,",
				"          identifier as (period as (start as string), system as string, use as string, value as string)[],",
				"          meta as (lastUpdated as string, profile as string[], source as string, versionId as short),",
				"          name as (family as string, given as string[], text as string, use as string)[],",
				"          resourceType as string,",
				"          telecom as (period as (start as string), system as string, use as string, value as string)[],",
				"          text as (div as string, status as string)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: 'fhir',",
				"     folderPath: 'fhir-dev.psi-mis.org/Patient',",
				"     fileName: (concat(toString($date), '.json')),",
				"     documentForm: 'arrayOfDocuments') ~> srcPatient",
				"srcPatient select(mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          identifier,",
				"          lastUpdated = meta.lastUpdated,",
				"          telecom",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 foldDown(unroll(identifier),",
				"     mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          lastUpdated,",
				"          telecom,",
				"          systemIdentifier = identifier.system,",
				"          valueIdentifier = identifier.value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 pivot(groupBy(gender,",
				"          birthDate,",
				"          id,",
				"          lastUpdated,",
				"          telecom),",
				"     pivotBy(systemIdentifier),",
				"     {} = case(!isNull(first(valueIdentifier)),1,0),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> pivot1",
				"pivot1 derive({urn:facebook} = toInteger(byName('urn:facebook')),",
				"          {urn:google} = toInteger(byName('urn:google')),",
				"          {urn:zalo} = toInteger(byName('urn:zalo'))) ~> MapDrifted1",
				"MapDrifted1 foldDown(unroll(telecom),",
				"     mapColumn(",
				"          gender,",
				"          birthDate,",
				"          id,",
				"          lastUpdated,",
				"          {urn:facebook},",
				"          {urn:google},",
				"          {urn:zalo},",
				"          telecomPeriod = telecom.period.start,",
				"          telecomSystem = telecom.system,",
				"          telecomUse = telecom.use,",
				"          telecomValue = telecom.value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2"
			]
		}
	}
}