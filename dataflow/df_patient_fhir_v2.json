{
	"name": "df_patient_fhir_v2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adls_raw",
						"type": "LinkedServiceReference"
					},
					"name": "srcPatient"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adls_development",
						"type": "LinkedServiceReference"
					},
					"name": "sinkDevelopmentDataLake"
				}
			],
			"transformations": [
				{
					"name": "selectPatientData"
				},
				{
					"name": "flattenIdentifier"
				},
				{
					"name": "pivotChannels"
				},
				{
					"name": "MapDriftedNewColumns",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     date as integer",
				"}",
				"source(output(",
				"          active as boolean,",
				"          address as (country as string, district as string, state as string)[],",
				"          birthDate as string,",
				"          communication as (language as (text as string), preferred as boolean)[],",
				"          gender as string,",
				"          id as short,",
				"          identifier as (period as (end as string, start as string), system as string, use as string, value as string)[],",
				"          meta as (lastUpdated as string, profile as string[], source as string, versionId as short),",
				"          name as (text as string, use as string)[],",
				"          resourceType as string,",
				"          telecom as (period as (end as string, start as string), system as string, use as string, value as string)[],",
				"          text as (div as string, status as string)",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: 'fhir',",
				"     documentForm: 'arrayOfDocuments',",
				"     wildcardPaths:['fhir.ken.psi-connect.org/Patient/20230228.json']) ~> srcPatient",
				"srcPatient select(mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          identifier,",
				"          lastUpdated = meta.lastUpdated,",
				"          telecom",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectPatientData",
				"selectPatientData foldDown(unroll(identifier),",
				"     mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          lastUpdated,",
				"          telecom,",
				"          systemIdentifier = identifier.system,",
				"          valueIdentifier = identifier.value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenIdentifier",
				"flattenIdentifier pivot(groupBy(gender,",
				"          birthDate,",
				"          id,",
				"          lastUpdated,",
				"          telecom),",
				"     pivotBy(systemIdentifier),",
				"     {} = case(!isNull(first(valueIdentifier)),1,0),",
				"     columnNaming: '$N$V',",
				"     lateral: true) ~> pivotChannels",
				"pivotChannels derive({urn:facebook} = toInteger(byName('urn:facebook')),",
				"          {urn:google} = toInteger(byName('urn:google')),",
				"          {urn:zalo} = toInteger(byName('urn:zalo'))) ~> MapDriftedNewColumns",
				"MapDriftedNewColumns select(mapColumn(",
				"          gender,",
				"          birthDate,",
				"          id,",
				"          lastUpdated,",
				"          telecomSystem = telecom[1].system,",
				"          telecomUse = telecom[1].use,",
				"          telecomValue = telecom[1].value,",
				"          {urn:facebook},",
				"          {urn:google},",
				"          {urn:zalo}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fhir',",
				"     folderPath: (concat('fhir.psi-mis.org/Patient/',toString($date))),",
				"     truncate: true,",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDevelopmentDataLake"
			]
		}
	}
}