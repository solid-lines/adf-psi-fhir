{
	"name": "df_risk_assessment",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adls_raw",
						"type": "LinkedServiceReference"
					},
					"name": "srcRiskAssessment"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adls_development",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     date as integer",
				"}",
				"source(output(",
				"          id as short,",
				"          meta as (lastUpdated as string, profile as string[], source as string, versionId as short),",
				"          prediction as (outcome as (coding as (code as integer, display as string, system as string)[], text as string), probabilityDecimal as double)[],",
				"          resourceType as string,",
				"          status as string,",
				"          subject as (reference as string)",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: 'fhir',",
				"     documentForm: 'arrayOfDocuments',",
				"     wildcardPaths:[(concat('v1/fhir.vnm.psi-connect.org/',substring(toString($date),0,4),'/',substring(toString($date),5,2),'/','RiskAssessment/',toString($date),'*.json'))]) ~> srcRiskAssessment",
				"srcRiskAssessment foldDown(unroll(prediction),",
				"     mapColumn(",
				"          id,",
				"          lastUpdated = meta.lastUpdated,",
				"          status,",
				"          subject = subject.reference,",
				"          outcomeSystem = prediction.outcome.coding.system,",
				"          outcomeCode = prediction.outcome.coding.code,",
				"          outcomeDisplay = prediction.outcome.coding.display,",
				"          probabilityDecimal = prediction.probabilityDecimal",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(subject = split(subject,'/')[2]) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fhir',",
				"     folderPath: (concat('v1/fhir.vnm.psi-connect.org/',substring(toString($date),0,4),'/',substring(toString($date),5,2),'/','RiskAssessment/',toString($date))),",
				"     truncate: true,",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}