{
	"name": "df_patient",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adls_raw",
						"type": "LinkedServiceReference"
					},
					"name": "srcPatient"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adls_development",
						"type": "LinkedServiceReference"
					},
					"name": "sinkDevelopmentPatient"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "flatten2"
				},
				{
					"name": "flattenIdentifier"
				},
				{
					"name": "flattenTelecom"
				},
				{
					"name": "flattenGivenName"
				}
			],
			"scriptLines": [
				"source(output(",
				"          entry as (fullUrl as string, resource as (active as boolean, birthDate as date, communication as (language as (coding as (code as string, display as string, system as string)[], text as string), preferred as boolean)[], extension as (url as string, valueCodeableConcept as (coding as (code as string, system as string)[]))[], gender as string, id as short, identifier as (period as (start as string), system as string, use as string, value as string)[], meta as (lastUpdated as string, profile as string[], source as string, versionId as boolean), name as (family as string, given as string[], text as string, use as string)[], resourceType as string, telecom as (period as (start as string), system as string, use as string, value as string)[], text as (div as string, status as string)), search as (mode as string))[],",
				"          id as string,",
				"          link as (relation as string, url as string)[],",
				"          meta as (lastUpdated as string),",
				"          resourceType as string,",
				"          total as short,",
				"          type as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: 'fhir',",
				"     folderPath: 'fhir-dev.psi-mis.org/patient',",
				"     fileName: '2022-07-21-patient.json',",
				"     documentForm: 'arrayOfDocuments') ~> srcPatient",
				"srcPatient foldDown(unroll(entry),",
				"     mapColumn(",
				"          birthDate = entry.resource.birthDate,",
				"          gender = entry.resource.gender,",
				"          id = entry.resource.id,",
				"          lastUpdated = entry.resource.meta.lastUpdated,",
				"          name = entry.resource.name,",
				"          telecom = entry.resource.telecom,",
				"          identifier = entry.resource.identifier",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 foldDown(unroll(name, name),",
				"     mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          lastUpdated,",
				"          telecom,",
				"          identifier,",
				"          familyName = name.family,",
				"          useName = name.use,",
				"          givenName = name.given",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten2",
				"flatten2 foldDown(unroll(identifier),",
				"     mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          lastUpdated,",
				"          telecom,",
				"          familyName,",
				"          useName,",
				"          givenName,",
				"          systemIdentifier = identifier.system,",
				"          useIdentifier = identifier.use,",
				"          valueIdentifier = identifier.value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenIdentifier",
				"flattenIdentifier foldDown(unroll(telecom),",
				"     mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          lastUpdated,",
				"          familyName,",
				"          useName,",
				"          givenName,",
				"          systemIdentifier,",
				"          useIdentifier,",
				"          valueIdentifier,",
				"          systemTelecom = telecom.system,",
				"          useTelecom = telecom.use,",
				"          valueTelecom = telecom.value",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenTelecom",
				"flattenTelecom foldDown(unroll(givenName, givenName),",
				"     mapColumn(",
				"          birthDate,",
				"          gender,",
				"          id,",
				"          lastUpdated,",
				"          familyName,",
				"          useName,",
				"          systemIdentifier,",
				"          useIdentifier,",
				"          valueIdentifier,",
				"          systemTelecom,",
				"          useTelecom,",
				"          valueTelecom,",
				"          givenName",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenGivenName",
				"flattenGivenName sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fhir',",
				"     folderPath: 'fhir-dev.psi-mis.org/patient',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDevelopmentPatient"
			]
		}
	}
}