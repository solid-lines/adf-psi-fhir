{
	"name": "df_qr_flatten",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_adls_curated",
						"type": "LinkedServiceReference"
					},
					"name": "srcQR"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_adls_development",
						"type": "LinkedServiceReference"
					},
					"name": "sinkDevelopment"
				},
				{
					"linkedService": {
						"referenceName": "ls_adls_development",
						"type": "LinkedServiceReference"
					},
					"name": "sinkQuestion"
				},
				{
					"linkedService": {
						"referenceName": "ls_adls_development",
						"type": "LinkedServiceReference"
					},
					"name": "sinkSurvey"
				}
			],
			"transformations": [
				{
					"name": "unpivotValues"
				},
				{
					"name": "selectFields"
				},
				{
					"name": "selectDimensionSurvey"
				},
				{
					"name": "DistinctSurveys"
				},
				{
					"name": "derivedColumnSurveyMetadata"
				},
				{
					"name": "selectDimensionQuestion"
				},
				{
					"name": "DistinctQuestion"
				},
				{
					"name": "idQuestion"
				},
				{
					"name": "lookupIdQuestion"
				},
				{
					"name": "selectFactFields"
				},
				{
					"name": "derivedColumnQuestionMetadata"
				}
			],
			"scriptLines": [
				"parameters{",
				"     date as integer",
				"}",
				"source(useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'json',",
				"     fileSystem: 'fhir',",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:[(fhir.psi-mis.org/QuestionnaireResponse/20230228/*.json)]) ~> srcQR",
				"srcQR unpivot(output(",
				"          valueType as string,",
				"          value as string",
				"     ),",
				"     ungroupBy(patientId,",
				"          id,",
				"          item,",
				"          lastUpdated),",
				"     lateral: true,",
				"     ignoreNullPivots: true) ~> unpivotValues",
				"unpivotValues select(mapColumn(",
				"          patientId,",
				"          surveyId = id,",
				"          item,",
				"          lastUpdated,",
				"          value",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFields",
				"unpivotValues select(mapColumn(",
				"          idSurvey = id",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDimensionSurvey",
				"selectDimensionSurvey aggregate(groupBy(idSurvey),",
				"     each(match(name!='idSurvey'), $$ = first($$))) ~> DistinctSurveys",
				"DistinctSurveys derive(project = 'A360',",
				"          country = 'Kenya',",
				"          type = 'chatbot') ~> derivedColumnSurveyMetadata",
				"unpivotValues select(mapColumn(",
				"          item,",
				"          valueType",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectDimensionQuestion",
				"selectDimensionQuestion aggregate(groupBy(item),",
				"     each(match(name!='item'), $$ = first($$))) ~> DistinctQuestion",
				"DistinctQuestion keyGenerate(output(idQuestion as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> idQuestion",
				"selectFields, idQuestion lookup(selectFields@item == DistinctQuestion@item,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupIdQuestion",
				"lookupIdQuestion select(mapColumn(",
				"          patientId,",
				"          surveyId,",
				"          questionId = idQuestion,",
				"          value,",
				"          lastUpdated",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectFactFields",
				"idQuestion derive(project = 'A360',",
				"          country = 'Kenya') ~> derivedColumnQuestionMetadata",
				"selectFactFields sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fhir',",
				"     folderPath: (concat('fhir.psi-mis.org/v2/QuestionnaireResponse/', toString($date),'/')),",
				"     truncate: true,",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkDevelopment",
				"derivedColumnQuestionMetadata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fhir',",
				"     folderPath: (concat('fhir.psi-mis.org/Question/', toString($date),'/')),",
				"     truncate: true,",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkQuestion",
				"derivedColumnSurveyMetadata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: 'fhir',",
				"     folderPath: (concat('fhir.psi-mis.org/Survey/', toString($date),'/')),",
				"     truncate: true,",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkSurvey"
			]
		}
	}
}